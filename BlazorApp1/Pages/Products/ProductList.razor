@page "/products"
@inject BlazorApp1.Data.NorthwindContext _context
@using BlazorApp1.Data
@using Microsoft.EntityFrameworkCore
@using BlazorApp1.Components

<h3>Ürün Listesi</h3>

<SearchBar SearchTerm="@searchTerm" SearchTermChanged="@OnSearchChanged" />

<ProductTable Products="products" OnDelete="DeleteProduct" />

@code {
    List<Product> products = new();
    List<Product> allProducts = new();
    string searchTerm = "";

    protected override async Task OnInitializedAsync()
    {
        allProducts = await _context.Products.Include(p => p.Category).ToListAsync();
        products = new List<Product>(allProducts);
    }

    private async Task DeleteProduct(int id)
    {
        var product = await _context.Products.FindAsync(id);
        if (product != null)
        {
            _context.Products.Remove(product);
            await _context.SaveChangesAsync();
        }

        allProducts = await _context.Products.Include(p => p.Category).ToListAsync();
        FilterProducts();
    }

    private void OnSearchChanged(string term)
    {
        searchTerm = term;
        FilterProducts();
    }

    private void FilterProducts()
    {
        if (string.IsNullOrWhiteSpace(searchTerm))
        {
            products = new List<Product>(allProducts);
        }
        else
        {
            products = allProducts
                .Where(p => p.ProductName.Contains(searchTerm, StringComparison.OrdinalIgnoreCase))
                .ToList();
        }
    }
}
